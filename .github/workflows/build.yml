name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          RDS_HOST: ${{ secrets.RDS_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}

  deploy_lambda:
    name: Deploy Lambda to AWS
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install dependencies for get_data_user
        run: |
          cd get_data_user
          pip install -r requirements.txt
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      - name: Install SAM CLI
        run: |
          pip install aws-sam-cli
      - name: Build SAM application
        run: sam build
      - name: Deploy SAM application
        run: |
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name untitled --capabilities CAPABILITY_IAM --parameter-overrides PRUEBA=${{ secrets.PRUEBA }} PRUEBA2=${{ secrets.PRUEBA2 }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      - name: Debug Env Variables
        run: |
          echo "RDS_HOST: ${{ secrets.RDS_HOST }}"
          echo "DB_USERNAME: ${{ secrets.DB_USERNAME }}"
          echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}"
          echo "DB_NAME: ${{ secrets.DB_NAME }}"
        env:
          RDS_HOST: ${{ secrets.RDS_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}